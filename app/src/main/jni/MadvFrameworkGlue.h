/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include "Log.h"

#ifndef _Included_com_android_madv_glrenderer_MadvGLRenderer
#define _Included_com_android_madv_glrenderer_MadvGLRenderer
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    createNativeGLRenderer
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_createNativeGLRenderer(JNIEnv* env, jobject self, jstring lutPath, jobject srcTextureSizeL, jobject srcTextureSizeR);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    releaseNativeGLRenderer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_releaseNativeGLRenderer
        (JNIEnv *, jobject);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    setSourceTextures
 * Signature: (ZIILcom/android/madv/glrenderer/MadvGLRenderer/SizeF;Lcom/android/madv/glrenderer/MadvGLRenderer/SizeF;IZ)V
 */
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setSourceTextures
        (JNIEnv *, jobject, jboolean, jint, jint, jobject, jobject, jint, jboolean);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setSourceYUVTextures
        (JNIEnv* env, jobject self, jboolean separateSourceTexture, jintArray srcTextureL, jintArray srcTextureR, jobject srcTextureSizeL, jobject srcTextureSizeR, jint srcTextureTarget, jboolean isYUVColorSpace);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setCapsTexture
        (JNIEnv* env, jobject self, jint texture, jint textureTarget);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setNeedDrawCaps
        (JNIEnv* env, jobject self, jboolean drawCaps);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    draw
 * Signature: (IIII)V
 */
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_draw__IIII
        (JNIEnv *, jobject, jint, jint, jint, jint);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_draw__IIIIIZLcom_madv360_glrenderer_Vec2f_2Lcom_madv360_glrenderer_Vec2f_2III
        (JNIEnv* env, jobject self, jint currentDisplayMode, jint x, jint y, jint width, jint height, jboolean separateSourceTextures, jobject leftSrcSize, jobject rightSrcSize, jint srcTextureType, jint leftSrcTexture, jint rightSrcTexture);

///*
// * Class:     com_android_madv_glrenderer_MadvGLRenderer
// * Method:    setEulerAngles
// * Signature: (FF)V
// */
//JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setEulerAngles
//        (JNIEnv *, jobject, jfloat, jfloat, jfloat);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    setGyroQuaternion
 * Signature: (FFFF)V
 */
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setGyroQuaternion(JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_resetGyroQuaternion(JNIEnv *, jobject, jfloat, jfloat, jfloat, jfloat);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_commitGyroQuaternion(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_normalizeRotationMatrix(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setPanPoint(JNIEnv* env, jobject self, jobject point);

JNIEXPORT jobject JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getPanPoint(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_resetPanPoint(JNIEnv* env, jobject self, jobject point);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_commitPanPoint(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_commitMatrix(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_resetRotation(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_adustPosition(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setGyroMatrix(JNIEnv* env, jobject self, jfloatArray matrix, jint rank);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    getDisplayMode
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getDisplayMode
        (JNIEnv *, jobject);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    setDisplayMode
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setDisplayMode
        (JNIEnv *, jobject, jint);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    getIsYUVColorSpace
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getIsYUVColorSpace
        (JNIEnv *, jobject);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    setIsYUVColorSpace
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setIsYUVColorSpace
        (JNIEnv *, jobject, jboolean);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    getFocalLength
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getFocalLength
        (JNIEnv *, jobject);

/*
 * Class:     com_android_madv_glrenderer_MadvGLRenderer
 * Method:    setFocalLength
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setFocalLength
        (JNIEnv *, jobject, jfloat);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setFOVDegree
        (JNIEnv *, jobject, jint);

///*
// * Class:     com_android_madv_glrenderer_MadvGLRenderer
// * Method:    getYawRadius
// * Signature: ()F
// */
//JNIEXPORT jfloat JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getYawRadius
//        (JNIEnv *, jobject);
//
///*
// * Class:     com_android_madv_glrenderer_MadvGLRenderer
// * Method:    setYawRadius
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setYawRadius
//        (JNIEnv *, jobject, jfloat);
//
///*
// * Class:     com_android_madv_glrenderer_MadvGLRenderer
// * Method:    getPitchRadius
// * Signature: ()F
// */
//JNIEXPORT jfloat JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getPitchRadius
//        (JNIEnv *, jobject);
//
///*
// * Class:     com_android_madv_glrenderer_MadvGLRenderer
// * Method:    setPitchRadius
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setPitchRadius
//        (JNIEnv *, jobject, jfloat);
//
///*
// * Class:     com_android_madv_glrenderer_MadvGLRenderer
// * Method:    getBankRadius
// * Signature: ()F
// */
//JNIEXPORT jfloat JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getBankRadius
//        (JNIEnv *, jobject);
//
///*
// * Class:     com_android_madv_glrenderer_MadvGLRenderer
// * Method:    setBankRadius
// * Signature: (F)V
// */
//JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setBankRadius
//        (JNIEnv *, jobject, jfloat);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setFlipX
        (JNIEnv* env, jobject self, jboolean flipX);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setFlipY
        (JNIEnv* env, jobject self, jboolean flipY);

JNIEXPORT void JNICALL Java_com_madv360_madv_utils_FileUtil_saveFileChunk
        (JNIEnv* env, jclass selfClass, jstring filePath, jlong fileOffset, jbyteArray data, jlong dataOffset, jlong length);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_rotationByProjectedPoints(JNIEnv* env, jobject self, jobject fromPoint, jobject toPoint);

JNIEXPORT jfloat JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getDiffYawRadius(JNIEnv* env, jobject self);
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setDiffYawRadius(JNIEnv* env, jobject self, jfloat diffYawRadius);

JNIEXPORT jfloat JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_getDiffPitchRadius(JNIEnv* env, jobject self);
JNIEXPORT void JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_setDiffPitchRadius(JNIEnv* env, jobject self, jfloat diffPitchRadius);

JNIEXPORT void JNICALL Java_com_madv360_madv_utils_FileUtil_extractLUTFiles
        (JNIEnv* env, jclass selfClass, jstring destDirectory, jstring lutBinFilePath, jint fileOffset);

JNIEXPORT jbyteArray JNICALL Java_com_madv360_glrenderer_MadvGLRenderer_renderThumbnail
        (JNIEnv* env, jclass selfClass, jint sourceTexture, jobject jobjSrcSize, jobject jobjDestSize, jstring lutPath);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLFilterCache_init(JNIEnv* env, jobject self, jstring resourceDirectory);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLFilterCache_dealloc(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLFilterCache_render__IIIIIII(JNIEnv* env, jobject self,
                                                                        jint filterID, jint x, jint y, jint width, jint height, jint sourceTexture, jint sourceTextureTarget);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLFilterCache_render__IIIIIIIILcom_madv360_glrenderer_Vec2f_2Lcom_madv360_glrenderer_Vec2f_2(JNIEnv* env, jobject self,
                                                                        jint filterID, jint x, jint y, jint width, jint height, jint sourceTexture, jint sourceTextureTarget, jint sourceOrientation, jobject jTexcoordOrigin, jobject jTexcoordSize);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLFilterCache_releaseGLObjects(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLRenderTexture_init(JNIEnv* env, jobject self, jint width, jint height);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLRenderTexture_dealloc(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLRenderTexture_releaseGLObjects(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLRenderTexture_blit(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLRenderTexture_unblit(JNIEnv* env, jobject self);

JNIEXPORT jint JNICALL Java_com_madv360_glrenderer_GLRenderTexture_copyPixelData(JNIEnv* env, jobject self, jbyteArray jData);

JNIEXPORT jbyteArray JNICALL Java_com_madv360_glrenderer_GLRenderTexture_copyPixelDataFromPBO(JNIEnv* env, jobject self);

JNIEXPORT jint JNICALL Java_com_madv360_glrenderer_GLRenderTexture_getFramebuffer(JNIEnv* env, jobject self);

JNIEXPORT jint JNICALL Java_com_madv360_glrenderer_GLRenderTexture_getTexture(JNIEnv* env, jobject self);

JNIEXPORT jint JNICALL Java_com_madv360_glrenderer_GLRenderTexture_getWidth(JNIEnv* env, jobject self);

JNIEXPORT jint JNICALL Java_com_madv360_glrenderer_GLRenderTexture_getHeight(JNIEnv* env, jobject self);

JNIEXPORT jint JNICALL Java_com_madv360_glrenderer_GLRenderTexture_bytesLength(JNIEnv* env, jobject self);

JNIEXPORT void JNICALL Java_com_madv360_glrenderer_GLRenderTexture_resizeIfNecessary(JNIEnv* env, jobject self, jint width, jint height);

#ifdef __cplusplus
}
#endif
#endif
